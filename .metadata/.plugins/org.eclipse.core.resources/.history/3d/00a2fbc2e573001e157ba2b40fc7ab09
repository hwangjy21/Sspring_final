package com.myweb.www.service;


import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import com.myweb.www.domain.BoardDTO;
import com.myweb.www.domain.BoardVO;
import com.myweb.www.domain.FileVO;
import com.myweb.www.domain.PagingVO;
import com.myweb.www.repository.BoardDAO;
import com.myweb.www.repository.FileDAO;

import lombok.extern.slf4j.Slf4j;


@Slf4j
@Service
public class BoardServiceImpl implements BoardService {
	
@Inject
private BoardDAO bdao;

@Inject
private FileDAO fdao;
/*
 * @Override public int register(BoardVO bvo) { log.info("글쓰기 서비스 들어옴"); return
 * bdao.insert(bvo); }
 */

@Override
public List<BoardVO> getList(PagingVO PagingVO) {
	log.info("글목록 서비스 들어옴");
	
	List<BoardVO> list= bdao.list();
	for(BoardVO bvo : list) {
	bdao.f_total(bvo);
	bdao.c_total(bvo);
	
	}
	return list;
}

@Override
public BoardDTO getDetail(int bno) {
	log.info("글 디테일 서비스 들어옴");
	
	bdao.readCount(bno, 1);
	
	
	return fdao.detail(bno);
}

@Override
public int modify(BoardVO bvo) {
	log.info("글 수정 서비스 들어옴");
	bdao.readCount(bvo.getBno(), -2);
	return bdao.modify(bvo);
}

@Override
public int delete(int bno) {

	return bdao.delete(bno);
}

@Override
public int getTotalCount(PagingVO PagingVO) {

	return bdao.totalCount(PagingVO);
}

@Override
public int register(BoardDTO bdto) {
	//bvo, flist 가져와서 각자 db에 저장
	//기존 메서드 활용해서
	int isUp = bdao.insert(bdto.getBvo());  //과정을 거져야 bno 등록
	
	//bvo insert 후 , 파일도 있다면...
	if(bdto.getFlist()==null) {
		isUp*=1;
		return isUp;
	}
	if(isUp>0&&bdto.getFlist().size()>0) {
		long bno = bdao.selectOneBno(); //가장 마지막에 등록된 bno
		
		//모든 파일에 bno set
		for(FileVO fvo : bdto.getFlist()) {
			fvo.setBno(bno);
			isUp*=fdao.insertFile(fvo);
			
		}
	}
	return isUp;
}
//
//@Override
//public FileVO getDetail_f(int bno) {
//	// TODO Auto-generated method stub
//
//	return fdao.getDetail_f(bno);
//}

@Override
public BoardDTO getDetailFile(long bno) {
    BoardDTO bdto = new BoardDTO();
    
    // 게시물 조회수를 증가시키고 결과를 변수에 할당
    int updatedCount = bdao.readCount(bno, 1);
    
    // 게시물 세부 정보를 가져와 bdto 객체에 설정
    BoardVO bvo = bdao.getDetail(bno);
    bdto.setBvo(bvo);
    
    // 파일 목록을 가져와 bdto 객체에 설정
    bdto.setFlist(fdao.getDetailFile(bno));
    
    return bdto;
}

@Override
public int modifyFiles(BoardDTO bdto) {
	bdao.readCount(bdto.getBvo().getBno(), -2);  //과정을 거져야 bno 등록
	int isUp =bdao.modify(bdto.getBvo());
	//bvo insert 후 , 파일도 있다면...
	if(bdto.getFlist()==null) {
		isUp*=1;
		return isUp;
	}
	if(isUp>0&&bdto.getFlist().size()>0) {
		long bno = bdto.getBvo().getBno();
		
		//모든 파일에 bno set
		for(FileVO fvo : bdto.getFlist()) {
			fvo.setBno(bno);
			isUp*=fdao.insertFile(fvo);
			
		}
	}
	return isUp;
}

@Override
public int delete_f(String uuid) {
	
	return fdao.delete_f(uuid);
}



}
