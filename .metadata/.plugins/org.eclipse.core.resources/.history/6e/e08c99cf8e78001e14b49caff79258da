console.log(bnoVal);

getCommentList(bnoVal);

async function postCommentToServer(cmtData) {
    try {
        const url = "/comment/post";
        const config = {
            method: "post",
            headers: {
                'content-type': 'application/json; charset=utf-8'
            },
            body: JSON.stringify(cmtData)
        };

        const resp = await fetch(url, config);
        const result = await resp.json();
        return result;
    } catch (err) {
        console.log(err);
    }
}

document.getElementById('cmtPostBtn').addEventListener('click', () => {
    const cmtText = document.getElementById('cmtText').value;
    const cmtWriter = document.getElementById('cmtWriter').innerText;
    if (cmtText == "" || cmtText == null) {
        alert("댓글을 입력해주세요.");
        document.getElementById('cmtText').focus();
        return false;
    } else {
        let cmtData = {
            bno: bnoVal,
            writer: cmtWriter,
            content: cmtText
        };
        console.log(cmtData);
        postCommentToServer(cmtData).then(result => {
            console.log(result);
            if (result == 1) {
                document.getElementById('cmtText').value = "";
                alert('댓글 등록 성공');
                window.location.reload();
                getCommentList(bnoVal);
            }
        });
    }
});

async function spreadCommentListFromServer(bno, page) {
    try {
        const resp = await fetch('/comment/' + bno + '/' + page);
        const result = await resp.json();
        return result;
    } catch (err) {
        console.log(err);
    }
}

function getCommentList(bno, page = 1) {
    spreadCommentListFromServer(bno, page).then(result => {
        const ul = document.getElementById('cmtListArea');
        if (result.cmtList.length > 0) {
            if (page == 1) {
                ul.innerHTML = "";
            }
        }

        if (result.cmtList.length > 0) {
            for (let cvo of result.cmtList) {
                let li = `<li data-cno="${cvo.cno}" data-writer="${cvo.writer}" class="list-group-item">`;
                li += `<div class="mb-3">`;
                li += `<div class="fw-bold">${cvo.writer}</div>`;
                li += `${cvo.content}`;
                li += `</div>`;
                if (cvo.regAt == cvo.modAt) {
                    li += `<span class="badge rounded-pill text-bg-light">${cvo.regAt}</span><br>`;
                } else {
                    li += `<span class="badge rounded-pill text-bg-light">(수정됨)${cvo.modAt}</span><br>`;
                }

                li += `<button type="button" class="modBtn btn btn-outline-success" data-bs-toggle="modal" data-bs-target="#myModal">%</button>`;
                li += `<button type "button" class="delBtn btn btn-outline-danger">X</button>`;
                li += `</li>`;

                li += `</li>`;
                ul.innerHTML += li;
            }

            let moreBtn = document.getElementById('moreBtn');
            if (result.pgvo.pageNo < result.endPage) {
                moreBtn.style visibility = 'visible';
                moreBtn.dataset.page = page + 1;
            } else {
                moreBtn.style.visibility = 'hidden';
            }
        } else {
            let li = `<li>Comment List Empty</li>`;
            ul.innerHTML = li;
        }
    });
}

async function removeCommentToServer(cno, writer) {
    try {
        const url = '/comment/del/' + cno + '/' + writer;
        const config = {
            method: 'delete'
        };
        console.log(">>url" + url);
        const resp = await fetch(url, config);
        const result = await resp.json();
        return result;
    } catch (err) {
        console.log(err);
    }
}

document.addEventListener('click', (e) => {
    console.log(e.target);

    if (e.target.classList.contains('delBtn')) {
        console.log('삭제클릭');
        let li = e.target.closest('li');
        let cnoVal = li.dataset.cno;
        let writerVal = li.dataset.writer;
        console.log(writerVal);
        removeCommentToServer(cnoVal, writerVal).then(result => {

            if (result == 1) {
                console.log(" >>>> cno/ writer >> " + cnoVal + " / " + writerVal);
                alert('댓글 삭제 성공');
            } else {
                console.log(" >>>> cno/ writer >> " + cnoVal + " / " + writerVal);
                alert('댓글 삭제 실패');
            }
            getCommentList(bnoVal);

        });
    } else if (e.target.classList.contains('modBtn')) {
        console.log('수정클릭');
        let li = e.target.closest('li');
        let writerVal = li.dataset.writer;
        let cmt
