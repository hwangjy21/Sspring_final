console.log(bnoVal);
console.log(authNick); // You can now use authNick in your JavaScript code

async function postCommentToServer(cmtData) {
    try {
        console.log("postCommentToServer(cmtData)");
        const url = "/comment/post";
        const config = {
            method: "post",
            headers: {
                "content-type": "application/json; charset=utf-8",
            },
            body: JSON.stringify(cmtData),
        };

        const resp = await fetch(url, config);
        const result = await resp.text(); //isOk
        return result;
    } catch (error) {
        console.log(error);
    }
}

document.getElementById("cmtPostBtn").addEventListener("click", () => {
    console.log("cmtPostBtn addEventListener");
    const cmtText = document.getElementById("cmtText").value;
    const cmtWriter = document.getElementById("cmtWriter").innerText; // span 안에 있는 값이라 innerText

    console.log("cmtWriter >> " + cmtWriter);

    if (cmtText == "" || cmtText == null) {
        alert("댓글을 입력해주세요.");
        document.getElementById("cmtText").focus();
        return false;
    } else {
        let cmtData = {
            bno: bnoVal,
            writer: cmtWriter,
            content: cmtText,
        };

        console.log(cmtData);
        postCommentToServer(cmtData).then((result) => {
            console.log("postCommentToServer(cmtData).then((result)" + result);
            if (result === "1") {
                alert("댓글 등록 성공");
                window.location.reload();
            }
        });
    }
});

async function spreadCommentListFromServer(bno, page) {
    try {
        console.log(
            "spreadCommentListFromServer(bno) >> bno" +
                bno +
                "/ page >> " +
                page
        );
        const resp = await fetch("/comment/" + bno + "/" + page);
        const result = await resp.json();
        return result;
    } catch (error) {
        console.log(error);
    }
}

function getCommentList(bno, page = 1) {
    spreadCommentListFromServer(bno, page).then((result) => {
        console.log("getCommentList >> result >> " + result);

        let ul = document.getElementById("cmtListArea");
        // Clear existing comments if it's the first page
        if (page === 1) {
            ul.innerHTML = "";
        }

        if (result.cmtList.length > 0) {
            for (let i = 0; i < result.cmtList.length; i++) {
                let li = `<li class="list-group-item">`;
                li += `<div class="mb-3">`;
                li += `<div class="fw-bold">${i + 1}. ${
                    result.cmtList[i].writer
                }</div>`;
                li += `${result.cmtList[i].content}`;
                li += `</div>`;
                li += `<span class="badge rounded-pill text-bg-info"> ${result.cmtList[i].modAt}</span>`;
                if (result.cmtList[i].writer === authNick) {
                    li += `<button type="button" class="btn btn-outline-dark mod" data-bs-toggle="modal" data-bs-target="#myModal" data-cno="${result.cmtList[i].cno}">%</button>`;
                    li += `<button type="button" class="btn btn-outline-dark" data-cno="${result.cmtList[i].cno}">X</button>`;
                }
                li += `</li>`;
                ul.innerHTML += li;
            }

            // Update the moreBtn visibility and data-page after processing comments
            let moreBtn = document.getElementById("moreBtn");
            console.log("moreBtn >> " + moreBtn);
            if (result.pgvo.pageNo < result.endPage) {
                moreBtn.style.visibility = "visible";
                moreBtn.dataset.page = page + 1;
            } else {
                moreBtn.style.visibility = "hidden";
            }
        }
    });
}

document.addEventListener("click", (e) => {
    if (e.target.classList.contains("del")) {
        console.log("삭제버튼 클릭");
        let li = e.target.closest("li");
        let cnoVal = e.target.dataset.cno;

        eraseCommentAtServer(cnoVal).then((result) => {
            if (result == 1) {
                alert("댓글 삭제 완료");
                getCommentList(bnoVal);
            } else {
                alert("댓글 삭제 실패");
            }
        });
    } else if (e.target.classList.contains("mod")) {
        console.log("수정버튼 클릭");

        let li = e.target.closest("li");
        // nextSibling() : 같은 부모의 다음 형제 객체를 반환
        let cno = e.target.dataset.cno; // 수정 버튼의 data-cno 속성 값 가져오기
        console.log("cno >> " + cno);
        let cmtText = li.querySelector(".fw-bold").nextSibling.textContent;

        console.log("cmtText >> " + cmtText);
        // 기존내용 모달창에 반영(수정하기 편하게)
        document.getElementById("cmtTextMod").value = cmtText.nodeValue;
        // cmtModBtn에 data-cno 달기
        document.getElementById("cmtModBtn").setAttribute("data-cno", cno);
    } else if (e.target.id == "cmtModBtn") {
        let cmtDataMod = {
            cno: e.target.dataset.cno,
            content: document.getElementById("cmtTextMod").value,
        };
        console.log(
            "cno >> " + cmtDataMod.cno + "// content >>" + cmtDataMod.content
        );
        console.log("cmtDataMod >>" + "cmtDataMod");
        editCommentToServer(cmtDataMod).then((result) => {
            if (parseInt(result)) {
                // 모달창 닫기
                document.querySelector(".btn-close").click();
                // 댓글 수정 후 댓글 목록을 다시 가져옴
                getCommentList(bnoVal);
            }
        });
    } else if (e.target.id == "moreBtn") {
        getCommentList(bnoVal, parseInt(e.target.dataset.page));
    }
});

async function editCommentToServer(cmtDataMod) {
    try {
        const url = "/comment/" + cmtDataMod.cno; // cno를 cmtDataMod.cno로 변경
        const config = {
            method: "put",
            headers: {
                "content-type": "application/json; charset=utf-8",
            },
            body: JSON.stringify(cmtDataMod),
        };
        const resp = await fetch(url, config);
        const result = await resp.text();
        return result;
    } catch (error) {
        console.log(error);
    }
}

async function eraseCommentAtServer(cnoVal) {
    try {
        const url = "/comment/" + cnoVal;
        const config = {
            method: "delete",
            // headers: {
            //     "content-type": "application/jsonS; charset=utf-8",
            // },
            // body: JSON.stringify(cnoVal), // 값을 JSON 문자열로 변환
        };
        console.log("url test >> " + url);
        const resp = await fetch(url, config);
        const result = await resp.text();
        return result;
    } catch (error) {
        console.log(error);
    }
}
