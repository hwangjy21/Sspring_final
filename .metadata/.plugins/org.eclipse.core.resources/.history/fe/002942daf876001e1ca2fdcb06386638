package com.myweb.www.security;

import java.io.IOException;

import javax.inject.Inject;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.security.core.Authentication;
import org.springframework.security.web.DefaultRedirectStrategy;
import org.springframework.security.web.RedirectStrategy;
import org.springframework.security.web.authentication.AuthenticationSuccessHandler;
import org.springframework.security.web.savedrequest.HttpSessionRequestCache;
import org.springframework.security.web.savedrequest.RequestCache;
import org.springframework.stereotype.Component;

import com.myweb.www.service.MemberService;

import lombok.Getter;
import lombok.Setter;
import lombok.extern.slf4j.Slf4j;
@Slf4j
@Component
public class LoginSuccessHandler implements AuthenticationSuccessHandler {

	@Getter
	@Setter
	 private String authEmail;
	@Getter
	@Setter
	 private String authUrl;
	 //데이터를 가져올 떄 (로그인 정보를 성공했을 때, 실패 했을 떄 그것을 정보를 준다.)
	
	//redirect로 데이터를 가져가는 역할(리다이렉트 스트레터지)
	 private RedirectStrategy restg = new DefaultRedirectStrategy();
	 
	 //로그인 정보를 준다
	 
	 //실제 로그인 정보, 경로 등을 저장
	 private RequestCache reqCache = new HttpSessionRequestCache();
	 
	 
	 @Inject
	 private MemberService msv;
	 
	@Override
	public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response,
			Authentication authentication) throws IOException, ServletException {
		setAuthEmail(authentication.getName());
		setAuthUrl("/board/list");

	}

}
